package defpackage;

import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableMap.Builder;
import java.util.Map;

/* renamed from: dng */
public final class dng implements wnh {
    private Map<fth, String> a = null;

    public final Map<fth, String> a() {
        if (this.a == null) {
            Builder builder = ImmutableMap.builder();
            builder.put(dnd.USE_CAMERA2, "camera-config-provider.camera2-state");
            builder.put(dnd.CAMERA1_FRONT_FACING_TAKE_PICTURE_API_WITH_FLASH, "camera-config-provider.camera1-front-facing-take-picture-api-with-flash-mushroom");
            builder.put(dnd.CAMERA1_BACK_FACING_TAKE_PICTURE_API_WITH_FLASH, "camera-config-provider.camera1-back-facing-take-picture-api-with-flash-mushroom");
            builder.put(dnd.CAMERA1_MAIN_CAMERA_FRONT_FACING_TAKE_PICTURE_API, "camera-config-provider.camera1-main-camera-front-facing-take-picture-api-mushroom");
            builder.put(dnd.CAMERA1_MAIN_CAMERA_BACK_FACING_TAKE_PICTURE_API, "camera-config-provider.camera1-main-camera-back-facing-take-picture-api-mushroom");
            builder.put(dnd.CAMERA1_FEED_CAMERA_FRONT_FACING_TAKE_PICTURE_API, "camera-config-provider.camera1-feed-camera-front-facing-take-picture-api-mushroom");
            builder.put(dnd.CAMERA1_FEED_CAMERA_BACK_FACING_TAKE_PICTURE_API, "camera-config-provider.camera1-feed-camera-back-facing-take-picture-api-mushroom");
            builder.put(dnd.CAMERA2_FRONT_FACING_TAKE_PICTURE_API_WITH_FLASH, "camera-config-provider.camera2-front-facing-take-picture-api-with-flash");
            builder.put(dnd.CAMERA2_BACK_FACING_TAKE_PICTURE_API_WITH_FLASH, "camera-config-provider.camera2-back-facing-take-picture-api-with-flash");
            builder.put(dnd.CAMERA2_FRONT_FACING_TAKE_PICTURE_API_STATE, "camera-config-provider.camera2-front-facing-take-picture-api-state");
            builder.put(dnd.CAMERA2_BACK_FACING_TAKE_PICTURE_API_STATE, "camera-config-provider.camera2-back-facing-take-picture-api-state");
            builder.put(dnd.CAMERA1_FRONT_FACING_TAKE_PICTURE_API_TIMEOUT_MS, "camera-config-provider.camera1-front-facing-take-picture-api-timeout-ms-mushroom");
            builder.put(dnd.CAMERA1_BACK_FACING_TAKE_PICTURE_API_TIMEOUT_MS, "camera-config-provider.camera1-back-facing-take-picture-api-timeout-ms-mushroom");
            builder.put(dnd.CAMERA1_TAKE_PICTURE_NO_CALLBACK_WAITING_MS, "camera-config-provider.camera1-take-picture-no-callback-waiting-ms");
            builder.put(dnd.CAMERA1_FRONT_FACING_SHOULD_DISABLE_SHUTTER_SOUND, "camera-config-provider.camera1-front-facing-should-disable-shutter-sound-mushroom");
            builder.put(dnd.CAMERA1_BACK_FACING_SHOULD_DISABLE_SHUTTER_SOUND, "camera-config-provider.camera1-back-facing-should-disable-shutter-sound-mushroom");
            builder.put(dnd.CAMERA1_FRONT_FACING_SHOULD_DISABLE_SHUTTER_SOUND_BY_NULL_SHUTTER_CALLBACK, "camera-config-provider.camera1-front-facing-should-disable-shutter-sound-by-null-shutter-callback");
            builder.put(dnd.CAMERA1_BACK_FACING_SHOULD_DISABLE_SHUTTER_SOUND_BY_NULL_SHUTTER_CALLBACK, "camera-config-provider.camera1-back-facing-should-disable-shutter-sound-by-null-shutter-callback");
            builder.put(dnd.CAMERA1_FRONT_FACING_MOCK_SHUTTER_CALLBACK_TIME_MS, "camera-config-provider.camera1-front-facing-mock-shutter-callback-time-ms");
            builder.put(dnd.CAMERA1_BACK_FACING_MOCK_SHUTTER_CALLBACK_TIME_MS, "camera-config-provider.camera1-back-facing-mock-shutter-callback-time-ms");
            builder.put(dnd.CAMERA1_FRONT_FACING_SHARPNESS_ADJUSTMENT_ENABLED, "camera-config-provider.camera1-front-facing-sharpness-adjustment-state");
            builder.put(dnd.IS_CAMERA1_ZSL_ENABLED, "camera-config-provider.zsl-enabled");
            builder.put(dnd.IS_CAMERA2_ZSL_ENABLED_FRONT_FACING, "camera-config-provider.is-camera2-zsl-enabled-v2-front-facing");
            builder.put(dnd.IS_CAMERA2_ZSL_ENABLED_BACK_FACING, "camera-config-provider.is-camera2-zsl-enabled-v2");
            builder.put(dnd.CAMERA2_LOWLIGHT_COMPENSATION_VALUE, "camera-config-provider.camera2-lowlight-compensation-value");
            builder.put(dnd.CAMERA2_STILL_CAPTURE_INTENT_ENABLED, "camera-config-provider.camera2-still-capture-intent-enabled");
            builder.put(dnd.PICTURE_NOISE_REDUCTION_MODE_OVERRIDE, "camera-config-provider.picture-noise-reduction-mode-override");
            builder.put(dnd.NATIVE_FRONT_FACING_ZOOM_ENABLED, "camera-config-provider.native-front-facing-zoom-enabled");
            builder.put(dnd.VIDEO_STABILIZATION_ENABLED, "camera-config-provider.video-stabilization-enabled");
            builder.put(dnd.AUTO_FOCUS_WITH_TORCH_ENABLED, "camera-config-provider.auto-focus-with-torch-enabled");
            builder.put(dnd.MULTIPLE_FRAME_BUFFER_ENABLED, "camera-config-provider.multiple-frame-buffer-enabled");
            builder.put(dnd.USE_IMAGE_READER_FOR_SCREENSHOT, "camera-config-provider.use-image-reader-for-screenshot");
            builder.put(dnd.VIDEO_HIGH_QUALITY_RECORDING, "camera-config-provider.video-high-quality-recording");
            builder.put(dnd.VIDEO_HIGH_BITRATE_RECORDING, "camera-config-provider.video-high-bitrate-recording");
            builder.put(dnd.DISABLE_DISTORTION_CORRECTION, "camera-config-provider.disable-distortion-correction");
            builder.put(dnd.CAN_SET_JPEG_THUMBNAIL_SIZE_TO_ZERO, "camera-config-provider.can-set-jpeg-thumbnail-size-to-zero");
            builder.put(dnd.MODIFIED_MAX_ZOOM_ENABLED, "camera-config-provider.modified-max-zoom-enabled");
            builder.put(dnd.BACK_FACING_FLASH_PHOTO_CAPTURE_DELAY, "camera-config-provider.back-facing-flash-photo-capture-delay");
            builder.put(dnd.LIGHT_MODE_CONTROLLER_WINDOW_SIZE, "camera-config-provider.light-mode-controller-window-size");
            builder.put(dnd.CAMERA1_FRONT_FACING_RECORDING_HINT_TIMING, "camera-config-provider.camera1-front-facing-recording-hint-timing");
            builder.put(dnd.CAMERA1_BACK_FACING_RECORDING_HINT_TIMING, "camera-config-provider.camera1-back-facing-recording-hint-timing");
            builder.put(dnd.AUTOFOCUS_TIMEOUT, "camera-config-provider.autofocus-timeout");
            builder.put(dnd.PREPARE_RECORDING_DELAY, "camera-config-provider.prepare-recording-delay");
            builder.put(dnd.START_RECORDING_DELAY, "camera-config-provider.start-recording-delay");
            builder.put(dnd.SC_MEDIA_RECORDER_RECOMMENDED, "camera-config-provider.sc-media-recorder-recommended");
            builder.put(dnd.SC_MEDIA_RECORDER_ENABLED, "camera-config-provider.sc-media-recorder-enabled");
            builder.put(dnd.ANDROID_MEDIA_RECORDER_SURFACE_RECORDING_ENABLED, "camera-config-provider.android-media-recorder-surface-recording-enabled");
            builder.put(dnd.HIGH_CONSTANT_FPS_SCHEME_ENABLED, "camera-config-provider.high-constant-fps-scheme-enabled");
            builder.put(dnd.BUFFER_COUNT_FOR_MULTIPLE_FRAME_BUFFER, "camera-config-provider.buffer-count-for-multiple-frame-buffer");
            builder.put(dnd.PREVIEW_RESOLUTION_PROVIDER, "camera-config-provider.preview-resolution-provider");
            builder.put(dnd.RECORDING_RESOLUTION_PROVIDER, "camera-config-provider.recording-resolution-provider");
            builder.put(dnd.PICTURE_RESOLUTION_PROVIDER, "camera-config-provider.picture-resolution-provider");
            builder.put(dnd.PREVIEW_RESOLUTION_UPPER_BOUND, "camera-config-provider.preview-resolution-upper-bound");
            builder.put(dnd.CAMERA2_PICTURE_MODE, "camera-config-provider.camera2-picture-mode");
            builder.put(dnd.NO_TRANSCODING_TARGET_HEIGHT, "camera-config-provider.no-transcoding-target-height");
            builder.put(dnd.CAMERA2_LOWLIGHT_ISO_THRESHOLD, "camera-config-provider.camera2-lowlight-iso-threshold");
            builder.put(dnd.VIDEO_RECORDING_PLAYBACK_ORIENTATION_HINT, "camera-config-provider.video-recording-playback-orientation-hint");
            builder.put(dnd.VIDEO_TRANSCODING_PLAYBACK_ORIENTATION_HINT, "camera-config-provider.video-transcoding-playback-orientation-hint");
            builder.put(dnd.MP4METADATA_VIDEO_CHECK_ENABLED, "camera-config-provider.mp4metadata-video-check-enabled");
            builder.put(dnd.CAMERA2_LOWLIGHT_MODE_ENABLED, "camera-config-provider.camera2-lowlight-mode-enabled");
            builder.put(dnd.SAMSUNG_AAC_CODEC_ENABLED, "camera-config-provider.samsung-aac-codec-enabled");
            builder.put(dnd.SHOULD_RECORDER_REQUEST_IFRAME_MANUALLY, "camera-config-provider.should-recorder-request-iframe-manually");
            builder.put(dnd.ENABLE_SAMSUNG_CAMERA_SDK_FRONT_FACING, "camera-config-provider.enable-samsung-camera-sdk-front-facing");
            builder.put(dnd.ENABLE_SAMSUNG_CAMERA_SDK_BACK_FACING, "camera-config-provider.enable-samsung-camera-sdk-back-facing");
            builder.put(dnd.BATCH_CAPTURE_MAX_NUMBER_OF_SNAPS, "camera-config-provider.batch-capture-max-number-of-snaps");
            builder.put(dnd.ENABLE_PORTRAIT_MODE, "camera-config-provider.enable-portrait-mode");
            builder.put(dnd.PORTRAIT_MODE_TEXTURE_RENDERER_BLUR_RADIUS, "camera-config-provider.portrait-mode-texture-renderer-blur-radius");
            builder.put(dnd.PORTRAIT_MODE_SCALE_RATIO_BEFORE_UPDATE, "camera-config-provider.portrait-mode-scale-ratio-before-update");
            builder.put(dnd.PORTRAIT_MODE_GUIDED_FILTER_ENABLED, "camera-config-provider.portrait-mode-guided-filter-enabled");
            builder.put(dnd.CAMERA2_SUGGESTED_HARDWARE_LEVEL, "camera-config-provider.camera2-suggested-hardware-level");
            builder.put(dnd.FORCE_SCREENSHOT_BY_SNAP_CAPTURE_SOURCE_SET, "camera-config-provider.force-screenshot-by-snap-capture-source-set");
            builder.put(dnd.FRONT_FACING_FORCE_SCREENSHOT_BY_SNAP_CAPTURE_SOURCE_SET, "camera-config-provider.front-facing-force-screenshot-by-snap-capture-source-set");
            builder.put(dnd.TAKE_PICTURE_STARTUP_COOLDOWN_ENABLED, "camera-config-provider.take-picture-startup-cooldown-enabled");
            builder.put(dnd.TAKE_PICTURE_COLDSTART_COOLDOWN_DURATION_SECONDS, "camera-config-provider.take-picture-coldstart-cooldown-duration-seconds");
            builder.put(dnd.TAKE_PICTURE_WARMSTART_COOLDOWN_DURATION_SECONDS, "camera-config-provider.take-picture-warmstart-cooldown-duration-seconds");
            builder.put(dnd.ENABLE_FACE_PRIORITY, "camera-config-provider.face-priority-enabled-v2");
            builder.put(dnd.OFF_SCREEN_SCREENSHOT_ENABLED, "camera-config-provider.off-screen-screenshot-enabled");
            builder.put(dnd.CAMERA1_FRONT_FACING_PICTURE_TARGET_HEIGHT, "camera-config-provider.camera1-front-facing-picture-target-height");
            builder.put(dnd.CAMERA1_BACK_FACING_PICTURE_TARGET_HEIGHT, "camera-config-provider.camera1-back-facing-picture-target-height");
            builder.put(dnd.CAMERA2_GPU_PHOTO_TARGET_HEIGHT, "camera-config-provider.camera2-gpu-photo-target-height");
            builder.put(dnd.CAMERA2_JPEG_PICTURE_TARGET_HEIGHT, "camera-config-provider.camera2-jpeg-picture-target-height");
            builder.put(dnd.FRONT_FACING_PREVIEW_RESOLUTION_OVERRIDE, "camera-config-provider.front-facing-preview-resolution-override");
            builder.put(dnd.BACK_FACING_PREVIEW_RESOLUTION_OVERRIDE, "camera-config-provider.preview-resolution-override");
            builder.put(dnd.FRONT_FACING_RECORDING_RESOLUTION_OVERRIDE, "camera-config-provider.front-facing-recording-resolution-override");
            builder.put(dnd.BACK_FACING_RECORDING_RESOLUTION_OVERRIDE, "camera-config-provider.recording-resolution-override");
            builder.put(dnd.FRONT_FACING_PICTURE_RESOLUTION_OVERRIDE, "camera-config-provider.front-facing-picture-resolution-override");
            builder.put(dnd.BACK_FACING_PICTURE_RESOLUTION_OVERRIDE, "camera-config-provider.picutre-resolution-override");
            builder.put(dnd.USE_TRANSCODING, "camera-config-provider.transcoding-state");
            builder.put(dnd.ENABLE_FACE_ACCESSIBILITY, "camera-config-provider.face-accessibility-enabled");
            builder.put(dnd.FACE_ACCESSIBILITY_EDGE_PIXEL, "camera-config-provider.face-accessibility-edge-pixel");
            builder.put(dnd.ENABLE_CAMERA2_OIS, "camera-config-provider.camera2-ois-enabled");
            builder.put(dnd.MULTISNAP_MIN_LAST_SEGMENT_LENGTH, "camera-config-provider.multisnap-min-last-segment-length");
            builder.put(dnd.ENABLE_SHUTTER_PRIORITY, "camera-config-provider.shutter-priority-enabled");
            builder.put(dnd.SHUTTER_PRIORITY_ISO_MAX_THRESHOLD, "camera-config-provider.shutter-priority-iso-max-threshold");
            builder.put(dnd.SHUTTER_PRIORITY_EXPOSURE_MAX_THRESHOLD_NS, "camera-config-provider.shutter-priority-exposure-max-threshold-ns");
            builder.put(dnd.IS_CODEC_LEASING_ENGINE_ENABLED_IN_MUSHROOM, "camera-config-provider.is-codec-leasing-engine-enabled-in-mushroom");
            builder.put(dnd.CODEC_LEASE_TIMEOUT_THRESHOLD, "camera-config-provider.codec-lease-timeout-threshold");
            builder.put(dnd.ENABLE_SOFTWARE_ENCODER, "camera-config-provider.software-encoder-recording-retry");
            builder.put(dnd.VIDEOCHAT_HW_AVC, "camera-config-provider.videochat-hw-avc");
            builder.put(dnd.VIDEOCHAT_HW_HEVC, "camera-config-provider.videochat-hw-hevc");
            builder.put(dnd.VIDEOCHAT_HW_VP8, "camera-config-provider.videochat-hw-vp8");
            builder.put(dnd.FRIENDS_SWIPE_TEACHING_TOOLTIP_ENABLED, "camera-config-provider.FRIENDS_PAGE_ONBOARDING_TOOLTIP_ENABLED");
            this.a = builder.build();
        }
        return this.a;
    }
}
